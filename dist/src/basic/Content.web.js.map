{"version":3,"sources":["../../../src/basic/Content.web.js"],"names":["Content","props","keyboardShouldPersistTaps","_scrollview","c","_root","children","propTypes","style","oneOfType","object","number","array","padder","bool","disableKBDismissScroll","enableResetScrollToCoords","string","StyledContent"],"mappings":"61BAAA,4B;AACA,qC;AACA;AACA;AACA,mE;;AAEMA,O;AACI;AACR;AACC;AACC,iCAAkC,KADnC;AAEC,0BAA2B,KAAKC,KAAL,CAAWC,yBAAX,CAAuC,KAAKD,KAAL,CAAWC,yBAAlD,CAA8E,SAF1G;AAGC,IAAK,eAAK;AACT,OAAKC,WAAL,CAAmBC,CAAnB;AACA,OAAKC,KAAL,CAAaD,CAAb;AACA,CANF;AAOK,KAAKH,KAPV;;AASE,KAAKA,KAAL,CAAWK,QATb,CADD;;;AAaA,C;;;AAGFN,QAAQO,SAAR,CAAoB;AACnBC,MAAO,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,MAAX,CAAmB,oBAAUC,MAA7B,CAAqC,oBAAUC,KAA/C,CAApB,CADY;AAEnBC,OAAQ,oBAAUC,IAFC;AAGnBC,uBAAwB,oBAAUD,IAHf;AAInBE,0BAA2B,oBAAUF,IAJlB;AAKnBZ,0BAA2B,oBAAUe,MALlB,CAApB;;;AAQA,GAAMC,eAAgB,yCAAa,oBAAb,CAAmC,EAAnC,iCAA6DlB,OAA7D,CAAtB,C;;AAE0BA,O,CAAjBkB,a","file":"Content.web.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ScrollView } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass Content extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ScrollView\n\t\t\t\tautomaticallyAdjustContentInsets={false}\n\t\t\t\tkeyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps ? this.props.keyboardShouldPersistTaps : 'handled'}\n\t\t\t\tref={c => {\n\t\t\t\t\tthis._scrollview = c;\n\t\t\t\t\tthis._root = c;\n\t\t\t\t}}\n\t\t\t\t{...this.props}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</ScrollView>\n\t\t);\n\t}\n}\n\nContent.propTypes = {\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n\tpadder: PropTypes.bool,\n\tdisableKBDismissScroll: PropTypes.bool, // ignored on web\n\tenableResetScrollToCoords: PropTypes.bool, // ignored on web\n\tkeyboardShouldPersistTaps: PropTypes.string\n};\n\nconst StyledContent = connectStyle(\"NativeBase.Content\", {}, mapPropsToStyleNames)(Content);\n\nexport { StyledContent as Content };\n"]}